%%Anidamiento de estructuras. While con IF ELSE
WHILE (a<b) LOOP{
	hola = 3_l;
	WHILE (b>a) LOOP{
		eso = 4_l;
		IF ( pepe >= juanita ){
			jeje = 1_l;
		} ELSE {
			identificador = 0_l;			
		} 
		END_IF;	
	};
};

%% IF con ELSE y otro if dentro del ELSE, con llamada a procedimiento en cada una.
IF (a==b) {
	print(x:f);
} ELSE {
	print(x:s);
	IF (a>b){
		print(as:fas);
	} END_IF;
} END_IF;

%%Prueba estructura WHILE con asginacion.
WHILE (a>b) LOOP {
	x = 3_l;
};
%%Salida: Linea numero: 2 --Sentencia asignacion variable., Linea numero: 3 --Sentencia WHILE LOOP., Linea numero: 5 --Fin de programa.


%%Prueba estructura WHILE con IF.
WHILE (a>b) LOOP {
	IF (a==b){
		print(s:f);
	} END_IF;
};
%%Salida: Linea numero: 4 --Invocacion a procedimiento con parametros., Linea numero: 5 --Sentencia IF sin ELSE, Linea numero: 6 --Sentencia WHILE LOOP., Linea numero: 7 --Fin de programa.]


%%Prueba estructura WHILE con IF ELSE.
WHILE (a>b) LOOP {
	IF (a==b){
		print(s:f);
	} ELSE {
		hola = 3.;
	} END_IF;
};
%%Salida: Linea numero: 4 --Invocacion a procedimiento con parametros., Linea numero: 6 --Sentencia asignacion variable., Linea numero: 7 --Sentencia IF con bloque ELSE., Linea numero: 8 --Sentencia WHILE LOOP., Linea numero: 9 --Fin de programa.


%%Prueba estructura WHILE con WHILE e invocacion a procedimiento.

	WHILE(b<a) LOOP{
		print(a:b);
	};
};
%%Salida: Linea numero: 4 --Invocacion a procedimiento con parametros., Linea numero: 5 --Sentencia WHILE LOOP., Linea numero: 6 --Sentencia WHILE LOOP., Linea numero: 7 --Fin de programa.]


%%Prueba estructura WHILE con OUT.
WHILE (a>b) LOOP {
	OUT("esto es una cadena");
};
%%Salida: Linea numero: 3 --Sentencia imprimir por pantalla., Linea numero: 4 --Sentencia WHILE LOOP., Linea numero: 5 --Fin de programa.


%%Prueba error en la condicion WHILE.
WHILE (a=b) LOOP{
	print(a:b);
};
%%Salida: Linea numero: 2 --Invocacion a procedimiento con parametros., Linea numero: 4 --Fin de programa.
%%Error: Numero de linea: 3  Error en la condicion del WHILE.


%Prueba error falta ) en WHILE.
WHILE (a=b LOOP{
	print(a:b);
};
%%Salida: Linea numero: 2 --Invocacion a procedimiento con parametros., Linea numero: 4 --Fin de programa.
%%Error: Numero de linea: 3  Error en la definicion del WHILE: falta el ) 


%Prueba error falta ( en WHILE.
WHILE a==b) LOOP{
	print(a:b);
};
%%Salida: Linea numero: 2 --Invocacion a procedimiento con parametros., Linea numero: 4 --Fin de programa.
%%Error: Numero de linea: 3  Error en la condicion del WHILE: falta el (.


%Prueba error (( en WHILE; y error en condicion.
WHILE (((a=b) LOOP{
	print(a:b);
};
%%Salida: Linea numero: 2 --Invocacion a procedimiento con parametros., Linea numero: 4 --Fin de programa.
%%Error: Numero de linea: 1  Error en la condicion
		 Numero de linea: 3  Error en la condicion del WHILE: hay un ( de mas del lado izquierdo.


%%Prueba error )) en WHILe.
WHILE (a==b))) LOOP{
	print(a:b);
};
%%Salida: Linea numero: 2 --Invocacion a procedimiento con parametros., Linea numero: 4 --Fin de programa.
%%Error: Numero de linea: 3  Error en la condicion del WHILE: hay uno o mas ) de mas del lado derecho.


%% Prueba estructura IF con invocacion a procedimiento.
IF (a==b){
	print(s:f);
} END_IF;

%%Salida: Linea numero: 2 --Invocacion a procedimiento con parametros., Linea numero: 3 --Sentencia IF sin ELSE, Linea numero: 4 --Fin de programa.


%% Prueba estructura IF con ELSE con invocacion a procedimiento.
IF (a==b){
	print(s:f);
} ELSE {
	print(s:g);
} END_IF;

%%Salida: Linea numero: 2 --Invocacion a procedimiento con parametros., Linea numero: 4 --Invocacion a procedimiento con parametros., Linea numero: 5 --Sentencia IF con bloque ELSE., Linea numero: 6 --Fin de programa.


%% Prueba estructura IF con error en la condicion y invocacion a procedimiento
IF (a=b) {
	print(f:s);
}END_IF;

%%Salida: Linea numero: 2 --Invocacion a procedimiento con parametros., Linea numero: 4 --Fin de programa.
%%Errores: Numero de linea: 3  Error en la condicion del IF.


%% Prueba estructura IF con error en la condicion y invocacion a procedimiento
IF () {
	print(f:s);
}END_IF;

%%Salida: Linea numero: 2 --Invocacion a procedimiento con parametros., Linea numero: 4 --Fin de programa.
%%Errores: Numero de linea: 3  Error en la condicion del IF.


%% Prueba estructura IF en la definicion del IF, falta cerrar el parentesis
IF (a==b {
	print(s:f);
} END_IF;

%%Salida: [Linea numero: 3 --Invocacion a procedimiento con parametros., Linea numero: 5 --Fin de programa.]
%%Errores: Numero de linea: 4  Error en la definicion del IF: falta el )

%% Prueba estructura IF en la definicion del IF, falta cerrar el parentesis
IF a==b) {
	print(a:b);
} END_IF;
%%Salida: Linea numero: 3 --Invocacion a procedimiento con parametros., Linea numero: 5 --Fin de programa.
%%Errores: Numero de linea: 4  Error en la definicion del IF: falta el (


%% Prueba estructura IF falta el END_IF, con invocacion a procedimiento
IF (a==b){
	print(s:g);
};
%%Salida: Linea numero: 2 --Invocacion a procedimiento con parametros., Linea numero: 4 --Fin de programa.
%%Errores: Numero de linea: 3  Error en la definicion del IF: falta el END_IF

%% Prueba estructura IF error en la condicion con ELSE e invocacion a procedimiento
IF (a=b){
	print(s:f);
} ELSE {
	print(s:g);
} END_IF;
%%Salida: Linea numero: 2 --Invocacion a procedimiento con parametros., Linea numero: 4 --Invocacion a procedimiento con parametros., Linea numero: 6 --Fin de programa.
%%Errores: Numero de linea: 5  Error en la condicion del IF ELSE.

%% Prueba estructura IF con ELSE y falta END_IF e invocacion a procedimiento
IF (a==b){
	print(s:f);
} ELSE {
	print(s:g);
};
%%Salida: Linea numero: 2 --Invocacion a procedimiento con parametros., Linea numero: 4 --Invocacion a procedimiento con parametros., Linea numero: 6 --Fin de programa.
%%Errores: Numero de linea: 5  Error en la definicion del IF ELSE: falta el END_IF

%% Prueba estructura OUT
OUT("cadena");
%%Salida: Linea numero: 1 --Sentencia imprimir por pantalla., Linea numero: 2 --Fin de programa.

%% Prueba estructura OUT con un parentesis de mas del lado derecho
OUT("cadena"));
%%Salida: Linea numero: 2 --Fin de programa.
%%Errores: Numero de linea: 1  Error al imprimir por pantalla: caracter ) de mas en el lado derecho

%% Prueba estructura OUT con un parentesis de mas del lado izquierdo
OUT(("cadena");
%%Salida: Linea numero: 2 --Fin de programa.
%%Errores: Numero de linea: 1  Error al imprimir por pantalla: caracter ( de mas en el lado izquierdo

%% Prueba estructura OUT sin parentesis
OUT"asd";
%%Salida: Linea numero: 2 --Fin de programa.
%%Errores: Numero de linea: 1  Error al imprimir por pantalla

%% Prueba estructura OUT falta un parentesis del lado izquierdo
OUT"asd");
%%Salida: Linea numero: 2 --Fin de programa.
%%Errores: Numero de linea: 1  Error al imprimir GINT a;
 };
%%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
%%Errores: Numero de linea: 3  Error al declarar procedimiento: falta cte

%% Prueba declaracion de procedimiento con parametros, falta cte
PROC procedimiento (FLOAT x) NI = {
	 LONGINT a;
 };
%%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
%%Errores: Numero de linea: 3  Error al declarar procedimiento: falta ctepor pantalla

%% Prueba estructura OUT falta un parentesis del lado derecho
OUT("asd";
%%Salida: Linea numero: 2 --Fin de programa.
%%Errores: Numero de linea: 1  Error al imprimir por pantalla

%% Prueba estructura OUT hay un error en la cadena
OUT(d);
%%Salida: Linea numero: 2 --Fin de programa.
%%Errores: Numero de linea: 1  Error al imprimir por pantalla

%% Prueba invocacion de procedimiento sin parametros
h();
%%Salida: Linea numero: 1 --Invocacion a procedimiento sin parametros., Linea numero: 2 --Fin de programa.

%% Prueba invocacion de procedimiento con un parametro
h(h:h);
%%Salida: Linea numero: 1 --Invocacion a procedimiento con parametros., Linea numero: 2 --Fin de programa.

%% Prueba invocacion de procedimiento sin parametro, falta un parentesis del lado izquierdo
h);
%%Salida: Linea numero: 2 --Fin de programa.
%%Errores: Numero de linea: 1  Error al invocar procedimiento: falta (

%% Prueba invocacion de procedimiento sin parametro, falta un parentesis del lado derecho
h(;
%%Salida: Linea numero: 2 --Fin de programa.
%%Errores: Numero de linea: 1  Error al invocar procedimiento: falta )

%% Prueba invocacion de procedimiento sin parametro, hay un parentesis "(" de mas
h(();
%%Salida: Linea numero: 2 --Fin de programa.
%%Errores: Numero de linea: 1  Error al invocar procedimiento: hay uno o mas ( de mas del lado izquierdo

%% Prueba invocacion de procedimiento sin parametro, hay un parentesis ")" de mas
h());
%%Salida: Linea numero: 2 --Fin de programa.
%%Errores: Numero de linea: 1  Error al invocar procedimiento:hay uno o mas ) de mas del lado derecho

%% Prueba invocacion de procedimiento sin parametro, hay dos parentesis "(" del lado izquierdo
h((;
%%Salida: Linea numero: 2 --Fin de programa.
%%Errores: Numero de linea: 1  Error al invocar procedimiento: hay uno o mas ( de mas del lado izquierdo

%% Prueba invocacion de procedimiento sin parametro, hay dos parentesis "(" del lado izquierdo
h(());
%%Salida: Linea numero: 2 --Fin de programa.
%%Errores: Numero de linea: 1  Error al invocar procedimiento: hay uno o mas ( de mas del lado izquierdo

%% Prueba declaracion de procedimiento sin parametro.
 PROC procedimiento() NI = 3_l {
	 LONGINT a;
 };
 %%Salida:Linea numero: 2 --Sentencia declaracion variables., Linea numero: 3 --Sentencia declaracion procedimiento sin parametros., Linea numero: 4 --Fin de programa.

%% Prueba declaracion de procedimiento con parametros.
 PROC procedimiento(REF LONGINT a, LONGINT b, REF FLOAT c) NI = 3_l {
	 LONGINT a;
 };
  %%Salida:Linea numero: 2 --Sentencia declaracion variables., Linea numero: 3 --Sentencia declaracion procedimiento con parametros., Linea numero: 4 --Fin de programa.

%% Prueba declaracion de procedimiento con parametros, error cte.
PROC procedimiento(REF LONGINT a, LONGINT b, REF FLOAT c) NI = 4 {
	 LONGINT a;
 };
 %%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
 %%Errores: Errores Lexicos: 
	Linea numero 1 :	Error: token invalido!
	Errores Sintacticos: 
		Numero de linea: 3  Error al declarar procedimiento: falta cte

%% Prueba declaracion de procedimiento con parametros, error cantidad de parametros.
PROC procedimiento(REF LONGINT a, LONGINT b, REF FLOAT c, FLOAT d) NI = 4_l {
	 LONGINT a;
 };
 %%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 3 --Sentencia declaracion procedimiento con parametros., Linea numero: 4 --Fin de programa.
 %%Errores: Numero de linea: 1  Error. El numero maximo de parametros permitido es 3.

%% Prueba declaracion de procedimiento sin parametros, falta ID.
PROC () NI = 4_l {
	 LONGINT a;
 };
 %%Salida:Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
 %%Errores:	Numero de linea: 3  Error al declarar procedimiento: falta ID

%% Prueba declaracion de procedimiento sin parametros, falta ).
PROC procedimiento( NI = 4_l {
	 LONGINT a;
 };
 %%Salida:Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
 %%Errores: Numero de linea: 3  Error al declarar procedimiento: falta )

%% Prueba declaracion de procedimiento sin parametros, falta ).
PROC procedimiento) NI = 4_l {
	 LONGINT a;
 };
 %%Salida:Linea numero: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
 %%Errores: Numero de linea: 3  Error al declarar procedimiento: falta (


%%Prueba declaracion de procedimiento sin parametros, falta uno o mas (.
PROC procedimiento()) NI = 4_l {
	 LONGINT a;
 };
 %%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
 %%Errores: Numero de linea: 3  Error al declarar procedimiento: tiene uno o mas ) de mas. 

%%Prueba declaracion de procedimiento sin parametros, falta uno o mas (.
PROC procedimiento(() NI = 4_l {
	 LONGINT a;
 };
 %%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
 %%Errores: Numero de linea: 3  Error al declarar procedimiento: tiene uno o mas ( de  mas. 

%%Prueba declaracion de procedimiento sin parametros, falta NI.
PROC procedimiento() = 4_l {
	 LONGINT a;
 };
 %%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
 %%Errores: Numero de linea: 3  Error al declarar procedimiento: falta NI

%%Prueba declaracion de procedimiento sin parametros, falta =.
PROC procedimiento() NI  4_l {
	 LONGINT a;
 };
 %%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
 %%Errores: Numero de linea: 3  Error al declarar procedimiento: falta =

%%Prueba declaracion de procedimiento sin parametros, falta cte.
PROC procedimiento() NI = {
	 LONGINT a;
 };
 %%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
 %%Errores: Numero de linea: 3  Error al declarar procedimiento: falta cte
                    
%% Prueba declaracion de procedimiento con parametros, error en los parametros
PROC h(FLOAT x;) NI = 4_l {
	 LONGINT a;
};
%%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
%%Errores: Numero de linea: 3  Error al declarar procedimiento: error en la lista de parametros

%% Prueba declaracion de procedimiento sin parametros, falta ID.
PROC (FLOAT x) NI = 4_l {
	 LONGINT a;
 };
%%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
%%Errores: Numero de linea: 3  Error al declarar procedimiento: falta ID

%% Prueba declaracion de procedimiento con parametros, falta )
PROC procedimiento(FLOAT x NI = 4_l {
	 LONGINT a;
 };
%%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
%%Errores: Numero de linea: 3  Error al declarar procedimiento: falta )

%% Prueba declaracion de procedimiento con parametros, falta (
PROC procedimiento FLOAT x) NI = 4_l {
	 LONGINT a;
 };
%%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
%%Errores: Numero de linea: 3  Error al declarar procedimiento: falta (

%% Prueba declaracion de procedimiento con parametros, falta NI
PROC procedimiento (FLOAT x)  = 4_l {
	 LONGINT a;
 };
%%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
%%Errores: Numero de linea: 3  Error al declarar procedimiento: falta NI

%% Prueba declaracion de procedimiento con parametros, falta "="
PROC procedimiento (FLOAT x) NI  4_l {
	 LONGINT a;
 };
%%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
%%Errores: Numero de linea: 3  Error al declarar procedimiento: falta =

%% Prueba declaracion de procedimiento con parametros, cambio cte por ID
PROC procedimiento (FLOAT x) NI = d {
	 LONGINT a;
 };
%%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
%%Errores: Numero de linea: 3  Error al declarar procedimiento: falta cte

%% Prueba declaracion de procedimiento con parametros, falta cte
PROC procedimiento (FLOAT x) NI = {
	 LONGINT a;
 };
%%Salida: Linea numero: 2 --Sentencia declaracion variables., Linea numero: 4 --Fin de programa.
%%Errores: Numero de linea: 3  Error al declarar procedimiento: falta cte



%% Prueba programa, estructuras asginacion, ejecutables, etc.

FLOAT a,b,res;
LONGINT c;

PROC suma(FLOAT a, FLOAT b, REF FLOAT res) NI = 4_l{
	res = a + b;
};

PROC producto(FLOAT a, FLOAT b, REF FLOAT res) NI = 4.{
	b=0.-b; %%el negativo de un numero.
	res = a * b;
};

PROC save() NI = 1.{
	OUT("GUARDANDO resultado-
	del archivo.");
};

a=12.;
b=-13.;
WHILE (res>c) LOOP {
	IF (a<=b){
		suma(a:a,b:b,res:res);
	}ELSE{
		resta(a:a,b:b,res:res);
	}END_IF;
	OUT("resultado");
};
save();


Linea numero: 1 --Sentencia declaracion variables., 
Linea numero: 2 --Sentencia declaracion variables., 
Linea numero: 5 --Sentencia asignacion variable., 
Linea numero: 6 --Sentencia declaracion procedimiento con parametros., 
Linea numero: 9 --Sentencia asignacion variable., 
Linea numero: 10 --Sentencia asignacion variable., 
Linea numero: 11 --Sentencia declaracion procedimiento con parametros., 
Linea numero: 15 --Sentencia imprimir por pantalla., 
Linea numero: 16 --Sentencia declaracion procedimiento sin parametros., 
Linea numero: 18 --Sentencia asignacion variable., 
Linea numero: 19 --Sentencia asignacion variable., 
Linea numero: 22 --Invocacion a procedimiento con parametros., 
Linea numero: 24 --Invocacion a procedimiento con parametros., 
Linea numero: 25 --Sentencia IF con bloque ELSE., 
Linea numero: 26 --Sentencia imprimir por pantalla., 
Linea numero: 27 --Sentencia WHILE LOOP., 
Linea numero: 28 --Invocacion a procedimiento sin parametros., 
Linea numero: 29 --Fin de programa.


Lexema: suma
	Atributo: Tipo   Valor: ID
	Atributo: Cantidad   Valor: 2
Lexema: a
	Atributo: Tipo   Valor: ID
	Atributo: Cantidad   Valor: 11
Lexema: res
	Atributo: Tipo   Valor: ID
	Atributo: Cantidad   Valor: 10
Lexema: b
	Atributo: Tipo   Valor: ID
	Atributo: Cantidad   Valor: 13
Lexema: c
	Atributo: Tipo   Valor: ID
	Atributo: Cantidad   Valor: 2
Lexema: save
	Atributo: Tipo   Valor: ID
	Atributo: Cantidad   Valor: 2
Lexema: -13.
	Atributo: Tipo   Valor: FLOAT
	Atributo: Cantidad   Valor: 1
Lexema: producto
	Atributo: Tipo   Valor: ID
	Atributo: Cantidad   Valor: 1
Lexema: 12.
	Atributo: Tipo   Valor: FLOAT
	Atributo: Cantidad   Valor: 1
Lexema: 4
	Atributo: Tipo   Valor: LONGINT
	Atributo: Cantidad   Valor: 1
Lexema: 4.
	Atributo: Tipo   Valor: FLOAT
	Atributo: Cantidad   Valor: 1
Lexema: "resultado"
	Atributo: Tipo   Valor: CADENA
	Atributo: Cantidad   Valor: 1
Lexema: resta
	Atributo: Tipo   Valor: ID
	Atributo: Cantidad   Valor: 1
Lexema: "GUARDANDO resultado
	del archivo."
	Atributo: Tipo   Valor: CADENA
	Atributo: Cantidad   Valor: 1
Lexema: 1.
	Atributo: Tipo   Valor: FLOAT
	Atributo: Cantidad   Valor: 1
Lexema: 0.
	Atributo: Tipo   Valor: FLOAT
	Atributo: Cantidad   Valor: 1

[265, 270, 44, 270, 44, 270, 59, 264, 270, 59, 268, 270, 40, 265, 270, 44, 265, 270, 44, 271, 265, 270, 41, 269, 61, 276, 123, 270, 61, 270, 43, 270, 59, 125, 59, 268, 270, 40, 265, 270, 44, 265, 270, 44, 271, 265, 270, 41, 269, 61, 276, 123, 270, 61, 276, 45, 270, 59, 270, 61, 270, 42, 270, 59, 125, 59, 268, 270, 40, 41, 269, 61, 276, 123, 260, 40, 277, 41, 59, 125, 59, 270, 61, 276, 59, 270, 61, 45, 276, 59, 266, 40, 270, 62, 270, 41, 267, 123, 257, 40, 270, 275, 270, 41, 123, 270, 40, 270, 58, 270, 44, 270, 58, 270, 44, 270, 58, 270, 41, 59, 125, 263, 123, 270, 40, 270, 58, 270, 44, 270, 58, 270, 44, 270, 58, 270, 41, 59, 125, 259, 59, 260, 40, 277, 41, 59, 125, 59, 270, 40, 41, 59, 0]
